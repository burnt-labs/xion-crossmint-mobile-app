# XION Configuration
EXPO_PUBLIC_TREASURY_CONTRACT_ADDRESS=""
EXPO_PUBLIC_RPC_ENDPOINT="https://rpc.xion-testnet-2.burnt.com:443"
EXPO_PUBLIC_REST_ENDPOINT="https://api.xion-testnet-2.burnt.com"

# Crossmint Configuration (Required)
# Get your API key from https://console.crossmint.com
# 
# IMPORTANT: Client API keys (starting with 'ck_') have limited capabilities:
# - They can ONLY create orders (orders.create scope)
# - They cannot read order status or update orders
# - The clientSecret returned from order creation enables authenticated operations
# 
# Server API keys (starting with 'sk_') have full permissions but should NEVER
# be exposed in mobile/client apps for security reasons.
# 
# For production mobile apps, you have two options:
# 1. Use Crossmint's hosted checkout (recommended for simplicity)
# 2. Implement a backend proxy that handles API calls with server keys
# 
# This demo uses a client key to demonstrate the order creation flow,
# but full payment processing requires additional implementation.
EXPO_PUBLIC_CROSSMINT_API_KEY=""

# Debug Mode - Set to "true" to bypass treasury contract (useful for testing)
# This allows wallet connection without fee grants
EXPO_PUBLIC_DEBUG_MODE="false"

# Optional: Override the default user map contract (for the demo tab)
EXPO_PUBLIC_USER_MAP_CONTRACT_ADDRESS=""

# Note: Collection IDs are configured in data/collections.json
# The server API key (CROSSMINT_SERVER_API_KEY) is only needed for server-side operations